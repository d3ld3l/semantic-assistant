# app.py
import streamlit as st
from utils import load_all_excels, semantic_search

st.set_page_config(page_title="–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫", layout="centered")

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üîç –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫")
st.markdown("–í–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É, –∏ —è –Ω–∞–π–¥—É —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–µ–º—ã –ø–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º Excel-—Ñ–∞–π–ª–∞–º.")

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö (–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ)
@st.cache_data
def load_data_once():
    return load_all_excels()

try:
    df = load_data_once()
except Exception as e:
    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
    st.stop()

# –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –∑–∞–ø—Ä–æ—Å–∞
query = st.text_input("–í–∞—à –∑–∞–ø—Ä–æ—Å:")

if query:
    with st.spinner("–ò—â—É –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ç–µ–º—ã..."):
        results = semantic_search(query, df)

    if not results:
        st.warning("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å.")
    else:
        st.markdown("### üîé –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:")
        for i, (score, phrase, topics) in enumerate(results):
            bg_color = "#dff0d8" if i == 0 else "#f8f9fa"
            st.markdown(
                f"""
                <div style="background-color: {bg_color}; padding: 10px; border-radius: 10px; margin-bottom: 10px;">
                    <strong>–§—Ä–∞–∑–∞:</strong> {phrase}<br>
                    <strong>–¢–µ–º—ã:</strong> {', '.join(topics)}<br>
                    <small><em>–°—Ö–æ–¥—Å—Ç–≤–æ: {score:.2f}</em></small>
                </div>
                """,
                unsafe_allow_html=True
            )
