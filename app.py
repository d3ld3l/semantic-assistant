# app.py
import streamlit as st
from utils import load_all_excels, semantic_search, exact_match_search

st.set_page_config(page_title="Semantic Assistant", layout="centered")
st.title("ü§ñ Semantic Assistant")

query = st.text_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å:")

if query:
    try:
        df = load_all_excels()
        results = semantic_search(query, df)

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ—á–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –∫–æ—Ä–æ—Ç–∫–∏–º —Å–ª–æ–≤–∞–º
        if len(query.strip()) <= 5:
            exact_matches = exact_match_search(query, df)
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –Ω–∞—á–∞–ª–æ
            results = exact_matches + [r for r in results if r not in exact_matches]

        if results:
            st.markdown("### üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:")
            for score, phrase, topics in results:
                st.markdown(f"- **{phrase}** ‚Üí {', '.join(topics)} (_{score:.2f}_)")
        else:
            st.warning("–°–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
