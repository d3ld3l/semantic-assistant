# app.py
import streamlit as st
from utils import load_all_excels, semantic_search

st.set_page_config(page_title="–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫", layout="wide")
st.title("üîç –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫")

with st.spinner("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö..."):
    try:
        df = load_all_excels()
        st.success("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        st.stop()

query = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É –¥–ª—è –ø–æ–∏—Å–∫–∞:")

if query:
    results = semantic_search(query, df)

    if results:
        st.markdown("### üîé –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:")
        for idx, (score, phrase, topics) in enumerate(results):
            color = "#D1F2EB" if idx == 0 else "#F4F6F7"
            st.markdown(
                f"<div style='background-color:{color}; padding:10px; border-radius:10px; margin-bottom:10px;'>"
                f"<strong>{phrase}</strong><br><small>–¢–µ–º—ã:</small> {', '.join(topics)}<br>"
                f"<small>–°—Ö–æ–∂–µ—Å—Ç—å: {score:.2f}</small></div>",
                unsafe_allow_html=True
            )
    else:
        st.warning("–°–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
