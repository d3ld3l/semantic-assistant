# app.py

import streamlit as st
from utils import load_all_excels, semantic_search

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫", layout="wide")
st.title("üí° –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç")
st.markdown("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–µ–º—ã –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π.")

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö (–æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ)
@st.cache_resource
def load_data():
    try:
        return load_all_excels()
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

df = load_data()

# –í–≤–æ–¥ –∑–∞–ø—Ä–æ—Å–∞
query = st.text_input("üîç –í–∞—à –∑–∞–ø—Ä–æ—Å:")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
if query and df is not None:
    with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º..."):
        results = semantic_search(query, df, top_k=5, threshold=0.5)

        if not results:
            st.warning("‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É.")
        else:
            st.markdown("### ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
            for i, (score, phrase, topics) in enumerate(results):
                highlight = "üü©" if i == 0 else "‚¨úÔ∏è"  # –≤—ã–¥–µ–ª—è–µ–º —Å–∞–º—ã–π —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π
                st.markdown(f"""
                {highlight} **–ó–∞–ø—Ä–æ—Å:** {phrase}  
                **–¢–µ–º—ã:** {"; ".join(topics)}  
                **–°—Ö–æ–¥—Å—Ç–≤–æ:** `{score:.2f}`
                """)
