# app.py
import streamlit as st
from utils import load_all_excels, semantic_search, exact_keyword_search

st.set_page_config(page_title="üîç Semantic Assistant", layout="centered")
st.title("ü§ñ Semantic Assistant")

query = st.text_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å:")

if query:
    try:
        df = load_all_excels()

        # –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫
        semantic_results = semantic_search(query, df)

        # –¢–æ—á–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –∫–æ—Ä–æ—Ç–∫–æ–º—É —Å–ª–æ–≤—É —Å —É—á—ë—Ç–æ–º —Å–∏–Ω–æ–Ω–∏–º–æ–≤
        exact_results = exact_keyword_search(query, df)

        # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞
        if semantic_results:
            st.markdown("### üß† –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫:")
            for score, phrase, topics in semantic_results:
                st.markdown(f"- **{phrase}** ‚Üí {', '.join(topics)} (_{score:.2f}_)")
        else:
            st.info("‚ùó –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

        # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
        if exact_results:
            st.markdown("### üéØ –¢–æ—á–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É:")
            for phrase, topics in exact_results:
                st.markdown(f"- **{phrase}** ‚Üí {', '.join(topics)}")
        elif len(query.strip()) <= 5:
            st.info("‚ùó –¢–æ—á–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –ø–æ –∫–æ—Ä–æ—Ç–∫–æ–º—É —Å–ª–æ–≤—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    except Exception as e:
        st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
