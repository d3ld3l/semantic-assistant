# app.py
import streamlit as st
import pandas as pd
from utils import load_all_excels, semantic_search, load_model

st.set_page_config(page_title="Semantic Assistant", layout="centered")
st.title("üß† Semantic Assistant")

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ –∏ –¥–∞–Ω–Ω—ã—Ö
with st.spinner("–ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å –∏ –¥–∞–Ω–Ω—ã–µ..."):
    model = load_model()
    df = load_all_excels(model)  # –ü–µ—Ä–µ–¥–∞—ë–º –º–æ–¥–µ–ª—å –≤ —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ Excel

st.markdown("---")

query = st.text_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å")
if query:
    with st.spinner("–ò—â–µ–º –Ω–∞–∏–±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ç–µ–º—ã..."):
        results = semantic_search(query, df, model)
        if results.empty:
            st.warning("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É")
        else:
            st.markdown("### üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
            for i, row in results.iterrows():
                style = "background-color:#D1FFD6; padding: 8px; border-radius: 8px;" if i == 0 else ""
                st.markdown(
                    f"<div style='{style}'><b>{row['phrase']}</b><br>–¢–µ–º—ã: {row['topics']}</div>",
                    unsafe_allow_html=True
                )
